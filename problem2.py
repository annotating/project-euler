"""
PROBLEM 2

Each new term in the Fibonacci sequence is generated by 
adding the previous two terms. By starting with 1 and 2, 
the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose 
values do not exceed four million, find the sum of the 
even-valued terms.
"""

""" 
We generate the Fibonnaci sequence recursively, each time
checking if the new term in the sequence is even. If it is,
then add it to our sum.  
"""

def main():
    "Initialize variables"
    MAX = 4000000
    sum = 2
    p1 = 1
    p2 = 2
    while (p1+p2 < MAX):
        if ((p1+p2)%2 == 0):
#            print "EVEN", p1+p2
            sum += p1+p2
#        else: 
#            print p1+p2
        next = p1+p2
        p1 = p2 
        p2 = next
    print "MAX TERM: ", MAX
    print "SUM OF EVEN TERMS IS:", sum

main()

"""
Another approach is to note that that each third
term is even, and the ratio between the even numbers
in the Fibonnaci ratio approaches 4.236068 (phi^3). 
Noting that, to generate the even terms of the Fibonnaci
ratio, we can simply take the current term, and multiply 
by 4.236068 each time, rounding down to the nearest integer.

For example:
2,8,34,.. multiplying by 4.236068 each time: 144,610,
2584,10946,46368,196418, 832040
"""


    